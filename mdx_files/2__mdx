https://code.kx.com/platform/user_interface/

# User interface - KX Delta Platform

Original URL: https://code.kx.com/platform/user_interface/

# KX Control

_KX Control_ is based on entities. Add entities and associate them to build a
system. Entities include process templates, instances, tasks, workflows,
alerts, etc. The HTML5 interface allows you to work with those entities using
a navigation tree, entity viewers and entity editors.

Here is the basic layout of the user interface. The tree on the left allows
you to look at the entities grouped by their type (in Entity view) or grouped
by their system package (in Package view). Entity editors and viewers appear
on the right side of the display.

![Screenshot](../img/control/controlforkxui.png)

## Navigation tree

The tree helps you navigate the entities in your system. Using the tree, you
can view the system by package or by entity. You can also filter the tree
using the icons and text filtering area above it.

The example on the left shows part of the Package view, filtered by the phrase
`taxi`. All of the entities are within the `TaxiPackage`.

The example on the right shows part of the Entity view of the tree, with
subfolders collapsed.

![Screenshot](../img/control/packageentitytree.png)

## Copying tab name or search for item

The current tab name can be copied if required for use in another entity or
view by using the context menu. The _Search Item in Navigator_ item populates
the search field in the Navigator.

![Screenshot](../img/control/searchitem1.png)

![Screenshot](../img/control/searchitem2.png)

## Viewer and editor tabs remembered

The Control UI page stores which viewers and editors were open and re-opens
these tabs on page refresh or when the user logs in with the same browser.

## Control entities

entity | description  
---|---  
[Action Trackers](../stream/actiontracker/) | Action Trackers, see _KX Stream_ documentation  
[Analytics Library](../analytics/) | Analytic groups and analytic functions that can be used in any instance or template. You can also add custom groups and functions to provide specialized behavior.  
[Connections](../connections/) | Connection groups and connections used to facilitate communications between processes: e.g. allowing a dashboard to query and receive data from one or more processes  
[Email Configuration](../emaildistribution/) | Email distribution lists  
[Entitlements](../entitlements/) | Security groups and security restrictions  
[Instances](../process_instances/) | Process instances that define the structure and behavior of your system. Process instances are created by instancing a process template; e.g. a tickerplant template is used to create a tickerplant instance  
[Packages](../release_management/) | Packages used to deploy various aspects of the system  
[Parameters](../configurations/) | Environmental parameter groups and parameters to make installation of the system more flexible and modular  
[Schemas](../schemas/) | Schema groups and schemas that define the structure of the data tables in the system  
[Service Classes](../sc_overview/) | Service classes are essentially a scalable version of existing Control instances  
[Templates](../process_templates/) | Pre-built process templates for common aspects of your system, such as messaging servers, tickerplants, and real-time databases. You can also define custom templates to add functionality to your system.  
[Tasks](../process_tasks/) | Tasks that provide scheduling capabilities to instances.  
[Users](../viewers/) | User groups and profiles  
[Workflows](../workflows/) | Workflows that define the start order and dependencies between tasks

