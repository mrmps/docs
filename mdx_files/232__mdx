https://code.kx.com/platform/monitoring/alert-management/

# Advanced alerts - KX Delta Platform

Original URL: https://code.kx.com/platform/monitoring/alert-management/

# Alert management dashboard

Deprecation

Modern browsers no longer support Flash applications. As of KX Delta Platform
v4.6.0 alerts should be configured using ControlUI.

New Alerts can be created within the Flex Dashboards located within your
deploy `https://<host>:<port>/delta`, DS_AlertOverview dashboard.

Use this dashboard to

  * define alert criteria and alert instances
  * define actions to be taken when alerts are triggered
  * suspend emails generated by certain alerts 
  * view logs of alert activity

Advanced users only

The _Alert Management_ dashboard is for advanced users only. A standard user,
who wants only to use and configure alerts, need not access this screen.

## Alerts editor

![Screenshot](../img/monitoring/alertseditor.png)

Use this tab to define alerts and the conditions that will trigger them.

### Alert definition

![Screenshot](../img/monitoring/advancedcolumnoptions.png)

The _Alert Definition/Trigger_ tab contains the details of each alert.

_Alert Name_

    A drop-down list of pre-defined alerts, as described in Predefined Alerts. A new alert can be created by selecting _New_ and entering an alert name. Required.
_Description_

    A text description of the alert.
_Trigger Table_

    A table which contains the data to configure alerts. Updates from this table will trigger an alert based on the trigger conditions set. For example, to monitor bid and ask prices select a quote table as the trigger table. Once the process has been set, a dropdown list of all tables available on that process will be shown. Pressing the _Lookup Data_ button will show sample data for the trigger table. Required.
_Lookup Table_

    A table specifying criteria for an alert to fire. Lookup tables can be either schema from the process or configuration parameters from _KX Control_. The lookup table must have at least one column in common with the trigger table. Pressing the _Lookup Data_ button displays data in the lookup table. Optional.
_Advanced_

    

Click the _Advanced_ button to view additional column options. Advanced
options are:

  * `Match`: used for alerts when using the lookup table feature. The alert data is joined with the lookup table. The match columns are those used to perform the join and must be present in both tables.
  * `Alert Key`: data from these columns is used to create a unique identifier for the alert. The default is a sym or symbol column, if it is present<
  * `Tag 1/Tag 2`: tused to create more useful data in the `dxAlert` table. For example CPU Usage has `tag1 - logicalName` and `tag2 - breachLevel`. So when looking at `dxAlert` a clearer view of the error emerges.

_Alert Type_

    

Defines how frequently the alert should be fired. The options are:

  * `All`: publish every time an alert is triggered
  * `On State Change`: publish when an alert is triggered and only when it changes state
  * `On True State Change`: publish when alert is triggered and when the state changes to `true`

_Post Alert Analytic_

    An analytic to be run after an alert has been triggered.

### Predefined alerts

Selecting the _Alert Name_ dropdown in _Alert Definition_ displays a list of
defined alerts. The list includes new alerts created, as well as alerts
predefined in _KX Monitoring_.

The predefined alerts:

name | description  
---|---  
dmxGenericFileChangeAlert | Generic file change alert. Can be set to trigger on changes to files monitored by the RDB OPS process `dmxFiles` table.  
dmxGenericFileGrowthAlert | Alert to monitor expected file growth.  
dmxGenericFileSizeThresholdAlert | Alert to trigger if files are not within their allocated size thresholds.  
dmxGenericFileSystemUsageAlert | Alert to monitor each drive and create notifications based on percentage usage.  
dmxGenericFileSizeAlert | Alert to trigger on excessive file sizes returned from the file monitor.  
dmxGenericInstanceAlert | Generic instance alert, used for monitoring active process instances.  
dmxGenericJobAlert | Alert triggered if a monitored job failed.  
dmxGenericJobDurationAlert | Alert triggered if a monitored job took longer than average to run.  
dmxGenericJobScheduledAlert | Alert triggered if a monitored job did not run in the scheduled time window.  
dmxGenericLogAlert | Generic log alert used for flagging error patterns.  
dmxGenericLogScrapeAlert | Generic alert for notification of err/warning messages in scraped logs.  
dmxGenericPIDResidentAlert | Alert triggered if a monitored process exceeds memory usage thresholds.  
dmxGenericProcessCPUUsageAlert | Alert to trigger on process CPU usage.  
dmxGenericServerAlert | A generic alert to be run on the server statistics table.  
dmxGenericServerCPUAlert | A generic alert to be run on the server statistics table.  
dmxGenericServerMinLoadAlert | Alert to monitor min load stats of a server.  
dmxGenericServerStateAlert | Generic alert to monitor active servers.  
  
### Alert triggers

![Screenshot](../img/monitoring/alerttriggers.png)

The right-hand portion of the _Alert Editor_ tab displays the trigger
conditions that determine when an alert will be triggered.

control | effect  
---|---  
Trigger Message | The message to be displayed when the trigger is reached and the alert is generated.  
Available Tags | The trigger message can include tagged data which is selected from the available tags list here. The tag value will be placed in the triggered message.  
Editor | This will be Analytic.  
Analytic | Analytics associated with the alert group AlertAnalytics can be used to define the trigger condition for an alert. This view is read-only, the analytic is pre-defined in _KX Control.  
Report Description | A description of the report. This is read-only.  
Report Parameters | The report parameters are listed here. These will change depending on the analytic selected. This is read-only and cannot be changed here. It can be changed in the Alert Instance Editor to enable the additional parameters to the alert. Use Default.  
  
### Create a new alert

  1. In _Alert Management_ , open the _Alert Editor_ tab.
  2. Specify the _Alert Definition_ values.
  3. Specify the trigger conditions that will cause an alert to be triggered by specifying the alert message and analytic to be used as described in Alert triggers.
  4. Click _Save_ to save the new alert or _Reset_ to return the alert to the previously saved value.
  5. Once the alert is saved, configure permissions for users.

### Set alert permissions

![Screenshot](../img/monitoring/permissionstab.png)

To specify unique permissions for each created alert:

  1. In _Alert Management_ , select the _Alert Editor_ tab and the appropriate alert.
  2. Select the _Permissions_ tab
  3. On the left side of the screen, select either a user or a user group. Click and drag the user or user group to the right side of the screen.
  4. Select a user or user group and set the _Access Level_ : 

     * `Deny All`: deny all access;
     * `Read/Deny Write`: Ensures read access, but overrides any inherited write access; 
     * `Read`: gives read permissions, these can be overridden by inherited `Deny` permission; 
     * `Read/Write`: Read & Write Permissions, can be overridden by inherited `Deny` permission.
  5. Tick _Inherited_ to indicate that a user has inherited their permissions from the user group.

  6. Click _X_ to remove a permission from any user/user group.

### Delete or duplicate an alert

To delete an alert:

  1. In _Alert Management_ , select the _Alert Editor_ tab.
  2. Click _Delete_.
  3. Confirm you want to permanently delete the alert. Click _Yes_ or _No_.
  4. The alert will be removed from the system.

To duplicate an alert:

  1. In _Alert Management_ , open the _Alert Editor_ tab
  2. Click _Duplicate_.

## Alert instance editor

![Screenshot](../img/monitoring/alertinstanceeditor.png)

The _Alert Instance Editor_ enables creation of individual instances for each
alert. Each instance can be configured differently.

The screen is divided into two portions.

### Alert instance management

In the _Alert Instance Management_ portion of the _Alert Instance Editor_ you
can:

  * View a list of alert instances – a table lists each alert instance with details including the alert instance name, the alert name, the process being monitored, and whether or not the alert is active.
  * Select an alert instance to view or edit – select it in the table and click _View/Edit_. 
  * Delete an alert instance – select it in the table and then click _Delete_. 
  * Create a new alert instance by clicking the _New Alert Instance_ button. 

Once a new alert instance has been created, its user permissions can be
specified.

### Alert instance details

![Screenshot](../img/monitoring/newalertinstance.png)

_Alert Instance Name_

    A unique name for the alert instance. 
_Alert_

    

Select the alert this instance will be based on.

  * `dmxFile System Usage`: file system usage 
  * `dxmInstanceAlert`: instance down 
  * `dmxLogAlert`: incoming log message 
  * `dmxPIDResidentMemory`: process resident memory: when memory increases beyond a configured level
  * `dmxServer1MinLoad`: 1-min load level 
  * `dmsServerCPU`: max CPU on server 
  * `dmxServerMemory`: maximum memory usage on server
  * `dmxServerStateAlert`: server down 

_Process_

    The process in which the alert is registered: must be running and must support alerts.
_Lookup Override_

    A table or configurable parameter used for comparing data: must have at least one column in common with the trigger table so that they can be joined in the alert. The value specified here overrides the lookup table selected in the alert this instance is based on. Use the _Lookup Data_ button to view details of the table/configurable parameter.
_Active_

    Check for the alert to be active.
_Persist_

    Determines whether or not the alert is persisted to _KX Control_ so that it can be loaded into the process each time it is started. If this is not checked the alert will exist only until the process is terminated.
_Max Frequency_

    The maximum frequency that an alert can be fired. Once this is checked, specify the frequency in terms of 1/x seconds.  
![Screenshot](../img/monitoring/alertinstancedetails.png)

_Persist_

    Determines whether or not the alert is persisted to _KX Control_ so that it can be loaded into the process each time it is started. If this is not ticked the alert will exist only until the process is terminated.

### Lookup data

![Screenshot](../img/monitoring/lookupdatadisplay.png)

When viewing or editing an alert instance definition, click the _Lookup Data_
button to see details of the selected Lookup Override (table or parameter).

## Actions editor

![Screenshot](../img/monitoring/actionseditor.png)

In the _Actions Editor_ set up email notifications to be sent when alerts are
triggered. Associate the notification with alert instances and specify their
frequency and recipients.

_Notification_

    Select a notification from the drop-down list of existing notifications. Or click _New_ and create a new notification. Or remove a notification from the list by selecting it and clicking _Delete_.
_Update Type_

    

Options are:

  * `On True`: send notification on alert `triggered=true`
  * `On False`: send notification on alert `triggered=false`
  * O`n First True`: send notification when the alert first sets `triggered=true`
  * `On First False`: send notification when the alert first sets `triggered=false`
  * `On Change`: send notification when the alert `triggered` value differs the previous value
  * `On All`: send notification regardless of the alert `triggered` state

_Time Since Last_

    The delay from when an email notification is sent until the next notification is sent.
_Email Template_

    Select or create an email template; subject and content. 

Email Editor

_Recipients_

    Edit the list of email contacts. Check the _Include_ box for the notifications to be sent to a recipient.

### Email editor

![Screenshot](../img/monitoring/emailtemplateeditor.png)

When creating or editing notifications, create an email template for the
notification. Select an _Email Template_ on the _Configure Notification_
screen, and click _Edit_ to open the Email Editor.

## Email suspension

![Screenshot](../img/monitoring/emailsuspensions.png)

Use the _Suspend Emails_ tab to set up periods when email notifications are
temporarily suspended.

Select the notification to suspend and enter start and end dates and times
(hh![🇲🇲](https://twemoji.maxcdn.com/v/latest/svg/1f1f2-1f1f2.svg)ss) for the
suspension and click _Add New_.

Multiple suspension periods can be set for each notification.

Click on any suspension and click _Delete_ to remove it.

## Logs

Use the _Logs_ tab to view the events that triggered an alert.

Filter the logs to select

  * Notifications
  * Alerts
  * Range of dates 

