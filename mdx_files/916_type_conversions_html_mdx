https://code.kx.com/pykx/api/pykx-q-data/type_conversions.html

# PyKX to Pythonic data type mapping - PyKX

Original URL: https://code.kx.com/pykx/api/pykx-q-data/type_conversions.html

Calling `.py()` on a `pykx.Table` will return a python `dict` object.

    
    
    >>> kx.Table(data={
    ...     'a': kx.random.random(10, 10),
    ...     'b': kx.random.random(10, 10)}).py()
    {'a': [5, 6, 4, 1, 3, 3, 7, 8, 2, 1], 'b': [8, 1, 7, 2, 4, 5, 4, 2, 7, 8]}

Calling `.np()` on a `pykx.Table` will return a numpy `record` array of the
rows of the table with each type converted to it closest analogous numpy type.

    
    
    >>> kx.Table(data={
    ...     'a': kx.random.random(10, 10),
    ...     'b': kx.random.random(10, 10)}).np()
    rec.array([(9, 9), (9, 7), (2, 6), (5, 6), (4, 4), (2, 7), (5, 8), (8, 4),
               (7, 4), (9, 6)],
               dtype=[('a', '<i8'), ('b', '<i8')])

Calling `.pd()` on a `pykx.Table` will return a pandas `DataFrame` with each
column being converted to its closest pandas `dtype`.

    
    
    >>> kx.Table(data={
    ...     'a': kx.random.random(10, 10),
    ...     'b': kx.random.random(10, 10)}).pd()
       a  b
    0  1  9
    1  0  7
    2  5  7
    3  1  1
    4  0  9
    5  0  1
    6  1  0
    7  7  8
    8  6  8
    9  3  3

Converting a `pandas` `DataFrame` object will result in a `pykx.Table` object.

    
    
    >>> kx.Table(pd.DataFrame({'a': [x for x in range(10)], 'b': [float(x) for x in range(10)]}))
    pykx.Table(pykx.q('
    a b
    ---
    0 0
    1 1
    2 2
    3 3
    4 4
    5 5
    6 6
    7 7
    8 8
    9 9
    '))

Calling `.pa()` on a `pykx.Table` will return a pyarrow `Table`.

    
    
    >>> kx.Table(data={
    ...     'a': kx.random.random(10, 10),
    ...     'b': kx.random.random(10, 10)}).pa()
    pyarrow.Table
    a: int64
    b: int64
    ----
    a: [[0,7,3,3,6,8,2,3,8,9]]
    b: [[5,7,5,6,7,0,2,1,8,1]]

Converting a `pyarow` `Table` object will result in a `pykx.Table` object.

    
    
    >>> kx.Table(pa.Table.from_arrays([[1, 2, 3, 4], [5, 6, 7, 8]], names=['a', 'b']))
    pykx.Table(pykx.q('
    a b
    ---
    1 5
    2 6
    3 7
    4 8
    '))

