https://code.kx.com/dashboards/workspace/

# Workspace - KX Dashboards

Original URL: https://code.kx.com/dashboards/workspace/

# Workspace

![Screenshot](../img/workspace/newdashboard.jpg)

The Workspace is comprised of three sections:

  * on the left is a component listing
  * in the center is the canvas where components are added and arranged
  * to the right are the properties associated with the selected component or dashboard

The user menu displays your user name in the top right. Here you can pick a
theme, timezone, log level and the base language for the dashboard: English,
German or Japanese.

Dashboard theme

The Dashboard Builder theme is independent of the dashboard style. Pick the
dashboard theme from the dashboardâ€™s _Style_ menu.

### Document List

A list of available dashboards. Draft dashboards are marked as 'Draft' and are
not available to users in _Viewer_.

![Screenshot](../img/workspace/documentlist.jpg)

#### Dashboard Manager

Dashboard Manager is available at the end of the Document List:

![Screenshot](../img/workspace/managedashboardmenu.jpg)

Clicking the ![Manage icon](../img/workspace/manageiconsmall.jpg) will open
the Manage menu.

![Screenshot](../img/workspace/manage.jpg)

Select a dashboard, then choose from:

_Open_

    Opens a Dashboard for editing.
_View on web_

    Opens the Viewer (end-user) version of your dashboard. 
_Delete_

    Deletes selected dashboard.

##### Rename Dashboards

To rename a dashboard, click on the dashboard name in the manager listing to
activate renaming.

![Screenshot](../img/workspace/renamedashboard.jpg)

##### Importing and exporting dashboards

Dashboards can be exported and imported in a file format.

![Screenshot](../img/workspace/dashboardimportmenu.jpg)

##### Manager Icons

icon | description  
---|---  
| Uncheck to make a draft dashboard; draft dashboards do not appear in the
Viewer dashboard listing.  
| Click the Home icon to select the dashboard to open when dashboards starts.  
| Click the star icon to make a dashboard a favorite; favorite dashboards are
prioritized in the dashboard listing.  
  
A set of buttons are found to the right of the dashboard dropdown selector in
the header bar:

button | function  
---|---  
![New icon](../img/workspace/newicon.jpg) | New dashboard  
![Save icon](../img/workspace/saveicon.jpg) | Save dashboard.  
![Undo Icon](../img/workspace/undoicon.jpg) | Undo Icon  
![Redo Icon](../img/workspace/redoicon.jpg) | Redo Icon  
![Share icon](../img/workspace/shareicon.jpg) | Share Dashboard Link; available in quickview  
![PDF icon](../img/workspace/pdf.jpg) | Export as PDF  
button | function  
---|---  
![New icon](../img/workspace/newicon.jpg) | New dashboard  
![Save icon](../img/workspace/saveicon.jpg) | Save dashboard.  
![Undo Icon](../img/workspace/undoicon.jpg) | Undo Icon  
![Redo Icon](../img/workspace/redoicon.jpg) | Redo Icon  
![Share icon](../img/workspace/shareicon.jpg) | Share Dashboard Link; available in quickview  
  
To export a dashboard as a file, long click on the ![Save
icon](../img/workspace/saveicon.jpg)

![Screenshot](../img/workspace/longclicksave.jpg)

Long click on the ![Undo Icon](../img/workspace/undoicon.jpg) to reverse
actions beyond the most recent event.

![Screenshot](../img/workspace/longclickundo.jpg)

### Preview Toggle

When building dashboards, use the _Preview_ button
![Screenshot](../img/workspace/previe.jpg) to interact with your dashboard.
Preview Mode offers the same level of interactivity as would be experienced by
the end user, allowing you to test the functionality of your dashboard.

![Screenshot](../img/workspace/previewdashboard.jpg)

Configuration options for the Dashboard Editor

![Screenshot](../img/workspace/usersettings.jpg)

_Editor Theme_

    Switch between `Light` and `Dark` theme for the Editor. This does not change the theme for the dashboard which is defined in the Style menu.
_Timezone_

    Switch the display of kdb+ type `datetime` and `timestamp` to selected _Timezone_. This doesn't change display of time duration, e.g. kdb+ type `time`.
_Log Level_

    Switch between `None`, `Errors`, `Handled/Warnings`, `Logs & Debugs`, or `All`. 
_Show Selection Breadcrumb_

    

Display root structure for components, including nested components on
selection. Components can be selected from the Breadcrumb.

![Screenshot](../img/workspace/breadcrumbcomponent.jpg)

_Open Viewer_

    Open the dashboard in a new tab as it would appear and function to the end user.
_About_

    Display copyright information and version of dashboards installed.
_Help_

    Opens online help documentation.

## Component listing

Add components by click-and-drag into the workspace, e.g. [Data
Grid](../datagrid/).

![Screenshot](../img/workspace/dragcomponent.jpg)

## Central canvas

Arrange and resize components on the central canvas by dragging the resize
handles on the edges.

![Screenshot](../img/workspace/simpledashboard.jpg)  
_A simple dashboard_

## Component properties

Selecting a dashboard component displays its properties on the right.

![Screenshot](../img/workspace/componentproperty.jpg)  
_A new Data Grid, with its properties displayed_

Properties vary from component to component, but almost all have a [Data
Source](../datasources/).

## Dashboard properties

At the top of the Properties Panel are icons which provide quick access to the
[data sources](../datasources/) and [view states](../viewstateparameters/).

![Screenshot](../img/workspace/dashpropertiestitlebar.png)

    

Click on the database icon ![Screenshot](../img/workspace/database.png) to
open the [Data Dialog](../datasources/).

    

Click on the eye icon ![Screenshot](../img/workspace/eyeicon.jpg) to open the
[View State Dialog](../viewstateparameters/).

### Property Search

![Screenshot](../img/workspace/propertysearch.jpg)

Search for a property within a selected component.

### Basics

![Screenshot](../img/workspace/dashboardname.jpg)

_Hash_

    The hash used in the dashboard url. 

Changing url hash

  1. Update the hash in the property editor.

  2. Click on the dashboard save button. 

This will reload the page with the new hash in the dashboard url.

_Name_

    A name for the dashboard.
_Link_

    The URL for sharing access to the dashboard. (The link is not editable. Clicking on it will open the dashboard in a new browser tab.)
_Hostname(s) access_

    Restrict access to the dashboard to the specified hostname. Multiple hostnames can be added by separating with a comma. If blank then all hostnames will have access to the dashboard.
_Enable "Share Dashboard"_

    Adds a share icon to generate a link which stores the viewed states (e.g. pivot drill down position) which can be shared with others. 
_Save Viewer State_

    Defines how view states are used.
view state | description  
---|---  
Enabled | When a User saves their dashboard, the current value of any view states in the dashboard are saved and used the next time the dashboard is loaded.  
Disabled | User defined view state values are not stored on dashboard save. Each load of a dashboard is treated as a new instance with respect to view states; default values are used  
Enabled (Autosave) | Changes in view state values are automatically saved on change. Values are stored and used the next time the dashboard is loaded.  
  
_Unsaved Viewer Prompt_

    

When checked, user will be prompted on any unsaved changes before switching to
another dashboard.

![Screenshot](../img/workspace/savechanges.jpg)

_Fill height_

    When checked, the dashboard fills the height of the browser. (Dashboards always fill the browser width.)

Row height

If Fill Height is disabled, _Row Count_ becomes _Row Height_ ; _Row Height_ is
the height, in pixels, between each grid row. The number of grid rows used is
defined by the prior _Row Count_ value; e.g. if _Row Count_ is 30 and _Row
Height_ is set to 30; then the distance from top to bottom - in the absence of
_Fill Height_ is 900 pixels. If the pixel height is greater than the browser
height, a scroll bar will appear. In addition, some components may be
positioned off-screen.

Save your dashboard frequently

To prevent loss of work from server time outs, save your dashboard on a
regular basis.

![Screenshot](../img/workspace/savedashboard.jpg)

_Floatable_

_Column Count_

_Row Count / Row Height_

     See [Layout Panel](../layout/) for further details

### Style

![Screenshot](../img/workspace/dashboardsettings.jpg)

_Dashboard Theme_

_Theme Switchable_

    Sets Light or Dark theme for dashboard and define if theme can be switched. This should be disabled (theme-locked) if the dashboard uses custom styling which would not update on global theme switch. 
_Widgets Spacing_

_Widget Shadow_

    Define distance in pixels between components and add optional shadow.
_Background Color_

_Transparent Background_

    Define background color of components.
_Border Size_

_Border Color_

_Border Rounding_

_Border Spacing_

    Define border criteria of components.
_Show Loading Indicators_

    When checked, indicates when dashboard is loading data. If your dashboard uses streaming, managed or polling data, leave this unchecked.

[Style](../style/#component-style) for common style properties

![Screenshot](../img/workspace/popupvisible.png)

Create a popup then edit to add content into the popup element.

![Screenshot](../img/workspace/editpopup.jpg)

![Screenshot](../img/workspace/newpopup.jpg)

_Name_

    A name for the popup provided by the user. 
_Visible_

    Assign a boolean viewstate. The viewstate can be triggered by an [Action](../action/). If no view state assigned and box checked, popup will appear when the dashboard loads.
_Dialog Title_

    Header name of popup.
_Dialog Height_

_Dialog Width_

    Dimension area of popup in pixels.
_Modal_

    Make Popup modal.
_Dialog Top_

_Diallog Left_

    The position of the popup is measured in pixels from top and/or left of screen. If not set, popup will appear in the middle of the screen. 
_Resizable_

    Allow user resizing of popup window. 

#### Actions on Close

A series of [view state parameters](../viewstateparameters/) values can be
mapped when the pop-up dialog is closed.

![Screenshot](../img/workspace/actiononclose.jpg)

[Actions](../action/#viewstate-mapping)

### Notifications

![Screenshot](../img/workspace/notificationsmenu.jpg)

_Enabled_

    Notification messages, e.g. a failed login attempt, will appear on screen.
_In Browser_

    

When enabled, notification will be forced to display in the browser, location
set by _Position_. Native notifications will trigger when disabled.

![Screenshot](../img/workspace/nativenotification.jpg) _native notification_

![Screenshot](../img/workspace/browsernotification.jpg) _browser notification_

_Position_

    Location of notification message, select from: `Top Left`, `Top Center`, `Top Right`, `Center Left`, `Center Right`, `Bottom Left`, `Bottom Center`, `Bottom Right`.
_Max Count_

    Maximum number of messages displayed at any one time.
_FadeOut (s)_

    Length of time in seconds notification remains on screen.
_Icon_

    Select from `bell-o`, `flag-o`, `bullhorn`, `clock-o`, `comment-o`, `commenting-o`, `exclamation-circle`, `exclamation-triangle`, `none` if an icon is required as part of the notification.
_Sound_

    Select from `beep`, `beepbeep`, `none` if an aural notification is required.
Grouping

    Enable _Group Notifications_ for notifications to be grouped as a single message within an interval defined by _Grouping Interval_ defined in seconds. 

#### Set Trigger

![Screenshot](../img/workspace/settrigger.jpg).

_Datasource_

    Defines the conditions for the trigger. The data source has to use streaming, managed or polling data.
    An example query for notifications; set Subscription to polling and keyed to `time` for every 20 seconds.
    
    
    share: `AAPL`GOOG;
    
    t: `time xasc ([] time:.z.Z ; sym:1000?`AAPL`GOOG; price:50+ (floor (1000?100.99)*100)%100)
    

Enable Browser Notifications

If prompted, enable browser notifications for the pop-up to appear.

_Notification Template_

    This determines the information displayed in the notification popup.
_Sound_

    What sound to associate with the defined trigger.
_Icon_

    What icon to associate with defined trigger.

Configure browser to allow popups

For popups to appear in the browser it may be necessary to change browser
settings to allow popups in addition to building the required configurations
in your dashboard. A valid SSL certificate is required for in browser
notifications.

### Shortcuts

![Screenshot](../img/workspace/keymapprops.png)

_Data Source_

    

[Data sources](../datasources/)

_Key_

    

A keyboard key that will assigned to the data source and execute when pressed.

![Screenshot](../img/workspace/keymapset.png)
![Screenshot](../img/workspace/keymapbeforepress.png)
![Screenshot](../img/workspace/keymapafterpress.png)

#### Browser Shortcuts

The key map component does not override any of the browser shortcuts in the
browser being used. This means other keys must be used for the key map
component.

Some of the existing browsers shortcuts can be found below.

shortcut | result  
---|---  
Ctrl + N | New window  
Ctrl + T | New tab  
Ctrl + H | Open history  
Ctrl + J | Open downloads  
Ctrl + G | Next match in Find Bar search  
Ctrl + P | Print options  
Ctrl + S | Save options  
Ctrl + U | Display uneditable HTML source code  
Ctrl + D | Bookmark current page  
Ctrl + I | Page info  
  
Key Shortcut Override

Dashboard key maps do not change existing browser shortcuts

### Screens

Each dashboard has a main screen; other screens can be added and linked using
the [Button](../button/) component.

![Screenshot](../img/workspace/addscreen.jpg)

button | action  
---|---  
![Delete screen](../img/workspace/screendelete.jpg) | Delete screen  
![Duplicate screen](../img/workspace/screenduplicate.jpg) | Duplicate screen  
![Set as default](../img/workspace/screenstar.jpg) | Set screen as default on dashboard load  
![Edit screen](../img/workspace/screenedit.jpg) | Edit screen  
![Screen snapshot](../img/workspace/screensnapshot.jpg) | Take snapshot image of screen: used by _Navigation Component_ tooltip  
  
### Document Graph

![Screenshot](../img/workspace/documentgraphbutton.jpg)

![Screenshot](../img/workspace/documentgraph.jpg)

Display relationships between components, data sources and view states for the
underlying dashboard. Selecting a data source or view state in the Document
Graph will open the appropriate editor.

_Clean up_ removes redundant data sources and view states.

Searching for a data source or view state will show all related interactions
for the searched item in the Document graph.

![Screenshot](../img/workspace/documentgraphgif.gif)

## Linking components

Components with a common _Data Source_ can be
[linked](../viewstateparameters/#linking-components) so that changes to one
are reflected in the other.

Queries using input variables can have values passed to them using [Data
Form](../dataform/) or [Drop Down List](../dropdownlist/) components.

## Keyboard shortcuts

Dashboards support keyboard shortcuts

shortcut | result  
---|---  
Ctrl + C | Copy component  
Ctrl + V | Paste component  
Ctrl + O | Open manage dashboard dialog  
Ctrl + S | Save dashboard  
Ctrl + X | Cut component  
Ctrl + Z | Undo feature  
Ctrl + Y | Redo feature  
F1 | Show help documentation for selected component  
  
## Custom component

This is for Dashboards component developers, who will need the Software
Development Kit and documentation of the API; contact your First Derivatives
representative for more information.

Once your Javascript component is built, add it into Dashboards:

![Screenshot](../img/workspace/customwidgethtmllight.jpg)

