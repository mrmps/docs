https://code.kx.com/insights/enterprise/monitoring/metrics-reference.html

# Metrics reference - kdb products

Original URL: https://code.kx.com/insights/enterprise/monitoring/metrics-reference.html

# Metrics Reference

This page lists the metrics generated by _kdb Insights Enterprise_. See
[Monitoring](metrics.html) for details on how metrics are captured, stored and
presented.

Each component generates a range of metrics. With metrics enabled on a
component, kdb info, memory and CPU metrics are generated.

## Database

The kdb Insights Database publishes performance metrics regarding the storage
and querying of data.

See the following links for details on the metrics available: \-
[Storage](../../microservices/database/monitoring.html#storage-metrics). \-
[Query](../../microservices/database/monitoring.html#query-metrics).

## Reliable Transport

The Reliable Transport, also known as a kdb Insights Stream, publishes status
and performance metrics.

Details on the metrics available are located
[here](../../microservices/rt/monitoring.html).

The metrics are published by default, but can be disabled by setting the
environment variable RT_EXPORT_METRICS="0".

## Base Infrastructure

The following sections relate the the _kdb Insights Enterprise_ base
components that manage the configuration and deployment of databases and
assemblies.

## Package manager

Relates to the management of packages via the `kxi package` command including
databases, pipelines and views created via the UI.

metric name | type | description  
---|---|---  
`kxi_pm_http_requests_total` | counter | Total number of requests by method, status and handler  
`kxi_pm_http_request_size_bytes` | summary | Size of incoming requests by handler  
`kxi_pm_http_response_size_bytes` | summary | Size of outgoing responses by handler  
`kxi_pm_http_request_duration` | histogram | Count and time take to make HTTP requests  
`kxi_pm_inprogress` | gauge | Number of HTTP requests in progress  
  
### kxi-controller

Each call to a kxi_controller API endpoint generates metrics. This relates to
the management of assemblies using the CLI via the deprecated `kxi assembly`
command.

#### Database management

Available metrics are:

metric name | type | description  
---|---|---  
`kxi_kxic_db_list_histogram_seconds` | `histogram` | Count and time taken to list databases  
`kxi_kxic_db_list_failure_total` | `counter` | Number of failed calls to list databases  
`kxi_kxic_db_create_histogram_seconds` | `histogram` | Count and time taken to create databases  
`kxi_kxic_db_create_failure_total` | `counter` | Number of failed calls to create databases  
`kxi_kxic_db_get_histogram_seconds` | `histogram` | Count and time taken to get databases by ID  
`kxi_kxic_db_get_failure_total` | `counter` | Number of failed calls to get databases by ID  
`kxi_kxic_db_update_histogram_seconds` | `histogram` | Count and time taken to update databases  
`kxi_kxic_db_update_failure_total` | `counter` | Number of failed calls to update databases  
`kxi_kxic_db_delete_histogram_seconds` | `histogram` | Count and time taken to delete databases  
`kxi_kxic_db_delete_failure_total` | `counter` | Number of failed calls to delete databases  
`kxi_kxic_db_count` | `gauge` | Number of existing databases  
  
#### Pipeline management

Available metrics are:

metric name | type | description  
---|---|---  
`kxi_kxic_pipeline_list_histogram_seconds` | `histogram` | Count and time taken to list pipelines  
`kxi_kxic_pipeline_list_failure_total` | `counter` | Number of failed calls to list pipelines  
`kxi_kxic_pipeline_create_histogram_seconds` | `histogram` | Count and time taken to create pipelines  
`kxi_kxic_pipeline_create_failure_total` | `counter` | Number of failed calls to create pipelines  
`kxi_kxic_pipeline_get_histogram_seconds` | `histogram` | Count and time taken to get pipelines by ID  
`kxi_kxic_pipeline_get_failure_total` | `counter` | Number of failed calls to get pipelines by ID  
`kxi_kxic_pipeline_update_histogram_seconds` | `histogram` | Count and time taken to update pipelines  
`kxi_kxic_pipeline_update_failure_total` | `counter` | Number of failed calls to update pipelines  
`kxi_kxic_pipeline_delete_histogram_seconds` | `histogram` | Count and time taken to delete pipelines  
`kxi_kxic_pipeline_delete_failure_total` | `counter` | Number of failed calls to delete pipelines  
`kxi_kxic_pipeline_count` | `gauge` | Number of existing pipelines  
  
#### Schema management

Available metrics are:

metric name | type | description  
---|---|---  
`kxi_kxic_schema_list_histogram_seconds` | `histogram` | Count and time taken to list schemas  
`kxi_kxic_schema_list_failure_total` | `counter` | Number of failed calls to list schemas  
`kxi_kxic_schema_create_histogram_seconds` | `histogram` | Count and time taken to create schemas  
`kxi_kxic_schema_create_failure_total` | `counter` | Number of failed calls to create schemas  
`kxi_kxic_schema_get_histogram_seconds` | `histogram` | Count and time taken to get a schema by ID  
`kxi_kxic_schema_get_failure_total` | `counter` | Number of failed calls to get a schema by ID  
`kxi_kxic_schema_update_histogram_seconds` | `histogram` | Count and time taken to update schemas  
`kxi_kxic_schema_update_failure_total` | `counter` | Number of failed calls to update schemas  
`kxi_kxic_schema_delete_histogram_seconds` | `histogram` | Count and time taken to delete schemas  
`kxi_kxic_schema_delete_failure_total` | `counter` | Number of failed calls to delete schemas  
`kxi_kxic_schema_count` | `gauge` | Number of existing schemas  
  
#### Stream management

Available metrics are:

metric name | type | description  
---|---|---  
`kxi_kxic_stream_list_histogram_seconds` | `histogram` | Count and time taken to list streams  
`kxi_kxic_stream_list_failure_total` | `counter` | Number of failed calls to list streams  
`kxi_kxic_stream_create_histogram_seconds` | `histogram` | Count and time taken to create streams  
`kxi_kxic_stream_create_failure_total` | `counter` | Number of failed calls to create streams  
`kxi_kxic_stream_get_histogram_seconds` | `histogram` | Count and time taken to get streams by ID  
`kxi_kxic_stream_get_failure_total` | `counter` | Number of failed calls to get streams by ID  
`kxi_kxic_stream_update_histogram_seconds` | `histogram` | Count and time taken to update streams  
`kxi_kxic_stream_update_failure_total` | `counter` | Number of failed calls to update streams  
`kxi_kxic_stream_delete_histogram_seconds` | `histogram` | Count and time taken to delete streams  
`kxi_kxic_stream_delete_failure_total` | `counter` | Number of failed calls to delete streams  
`kxi_kxic_streams_count` | `gauge` | Number of existing streams  
  
#### Assembly management

Relates to the management of assemblies from the UI. Available metrics are:

metric name | type | description  
---|---|---  
`kxi_kxic_assembly_list_histogram_seconds` | `histogram` | Count and time taken to list assemblies  
`kxi_kxic_assembly_list_failure_total` | `counter` | Number of failed calls to list assemblies  
`kxi_kxic_assembly_create_histogram_seconds` | `histogram` | Count and time taken to create assemblies  
`kxi_kxic_assembly_create_failure_total` | `counter` | Number of failed calls to create assemblies  
`kxi_kxic_assembly_get_histogram_seconds` | `histogram` | Count and time taken to get assemblies  
`kxi_kxic_assembly_get_failure_total` | `counter` | Number of failed calls to get assemblies  
`kxi_kxic_assembly_update_histogram_seconds` | `histogram` | Count and time taken to update assemblies  
`kxi_kxic_assembly_update_failure_total` | `counter` | Number of failed calls to update assemblies  
`kxi_kxic_assembly_delete_histogram_seconds` | `histogram` | Count and time taken to delete assemblies  
`kxi_kxic_assembly_delete_failure_total` | `counter` | Number of failed calls to delete assemblies  
`kxi_kxic_assembly_deploy_histogram_seconds` | `histogram` | Count and time taken to deploy assemblies  
`kxi_kxic_assembly_deploy_failure_total` | `counter` | Number of failed calls to deploy assemblies  
`kxi_kxic_assembly_export_histogram_seconds` | `histogram` | Count and time taken to export assemblies  
`kxi_kxic_assembly_export_failure_total` | `counter` | Number of failed calls to export assemblies  
`kxi_kxic_assembly_teardown_histogram_seconds` | `histogram` | Count and time taken to teardown assemblies  
`kxi_kxic_assembly_teardown_failure_total` | `counter` | Number of failed calls to teardown assemblies  
`kxi_kxic_assembly_count` | `gauge` | Number of existing assemblies  
  
### Information service

Each call to the Information Service API endpoint generates metrics.

metric name | type | description  
---|---|---  
`kxi_info_details_histogram_seconds` | `histogram` | Count and time taken to get details for a specific client ID  
`kxi_info_details_failure_total` | `counter` | Number of failed calls to get details for a specific client ID  
  
### Operator

The _kdb Insights Operator_ generates metrics on each attempt to interact with
the SP Coordinator or Keycloak instance of each namespace.

metric name | type | description  
---|---|---  
`kxi_operator_keycloak_errors_total` | `counter` | Number of failed requests to Keycloak  
`kxi_operator_keycloak_request_seconds` | `histogram` | Count and time taken to make requests to Keycloak  
`kxi_operator_pipeline_errors_total` | `counter` | Number of failed calls to the SP Coordinator  
`kxi_operator_pipeline_request_seconds` | `histogram` | Count and time taken to make requests to the SP Coordinator  
  
## Component level metrics

### License information

Each component records kdb+ license information on startup.

metric name | type | description  
---|---|---  
`kdb_info` | `gauge` | kdb+ license info, including: expiry date, OS version, process cores, release date, release version  
  
### Memory statistics

Each component records kdb+ memory statistics. Output is taken from `.Q.w[]`
for the component container.

metric name | type | description  
---|---|---  
`memory_usage_bytes` | `gauge` | Current memory usage in bytes  
`memory_heap_bytes` | `gauge` | Memory available in the heap in bytes  
`memory_heap_peak_bytes` | `gauge` | Maximum heap size so far in bytes  
`memory_heap_limit_bytes` | `gauge` | Memory limit heap in bytes  
`memory_mapped_bytes` | `gauge` | Mapped memory in bytes  
`memory_physical_bytes` | `gauge` | Physical memory available in bytes  
`kdb_syms_total` | `gauge` | Number of symbols  
`kdb_syms_memory_bytes` | `gauge` | Memory use of symbols in bytes

