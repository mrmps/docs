https://code.kx.com/insights/api/database/query/sql-functions.html

# SQL2 Functions and Operators - kdb products

Original URL: https://code.kx.com/insights/api/database/query/sql-functions.html

abs | abs(numeric_type) -> numeric_type | Returns the absolute value of a number. | abs(-25) -> 25  
ceil | ceil(numeric_type) -> long | Rounds a number up to nearest long. | ceil(12.5) -> 13  
ceiling | ceiling(numeric_type) -> long | Rounds a number up to nearest long. | ceiling(12.5) -> 13  
floor | floor(numeric_type) -> long | Rounds a number down to nearest long. | floor(12.5) -> 12  
round | round(numeric_type, long) -> float | Rounds a number to as many decimal places as second argument. | round(10.325, 2) -> 10.33  
width_bucket[2] | width_bucket(numeric_type, numeric_type[]) -> long   
width_bucket(temporal_type, temporal_type[]) -> long | Returns the bucket number to which the first value belongs in based on the array list of values in the second argument. | width_bucket(35, array[0, 25, 50, 75, 100]) -> 2  
width_bucket[4] | width_bucket(numeric_type, numeric_type, numeric_type, numeric_type) -> numeric_type   
width_bucket(temporal_type, temporal_type, temporal_type, temporal_type) -> temporal_type | Converts a numerical or temporal value into a number representing which bucket it would be assigned to. First argument defines the expression to bucket, second and third arguments set the min and max values, and the last argument sets the number of buckets. | width_bucket(35, 0, 100, 4) -> 2  
neg | neg(numeric_type) -> numeric_type | Returns the negative value of a number. | neg(-10) -> 10  
degrees | degrees(numeric_type) -> numeric_type | Converts a value in degrees to radians. | degrees(3.141593) -> 180.  
radians | radians(numeric_type) -> numeric_type | Converts a value in radians to degrees. | radians(180) -> 3.141593.  
factorial | factorial(postive_numeric) -> postive_numeric | Applies the factorial function `n!`. Must be a positive number. | factorial(4) -> 24  
div | div(numeric_type, numeric_type) -> long | Returns the `long` remainder of a number divided by another number. | div(10, 3) -> 3  
log | log(numeric_type) -> float | Performs a logarithm with base 10. | log(10) -> 1  
log10 | log10(numeric_type) -> float | Performs a logarithm with base 10. | log10(100) -> 2  
ln | log(numeric_type) -> float | Performs a logarithm with base 'e'. | ln(2.718) -> 0.99989...  
exp | exp(numeric_type) -> float | Performs an exponent with number 'e'. | exp(1) -> 2.71828...  
gcd | gcd(long, long)-> long | Calculates the greatest common divisor between two numbers, or two lists of numbers. | gcd(10, 20) -> 10  
lcm | lcm(long, long) -> long | Calculates the least common multiple between two numbers, or two lists of numbers. | lcm(75, 50) -> 150  
pi | pi() -> float | Returns the value of `pi`, e.g 3.14159.. | pi() -> 3.14159...  
power | power(numeric_type, numeric_type) -> float | Computes the first argument to the power of the second argument. | power(10, 2) -> 100  
trunc[1] | trunc(numeric_type) -> long | Returns the integer part of a number. | trunc(10.25368) -> 10  
trunc[2] | trunc(numeric_type, long) -> numeric_type | Returns the first argument to as many decimal points as the second argument. | trunc(10.25368, 2) -> 10.25  
sqrt | sqrt(numeric_type) -> float | Returns the square root of a numeric type. | sqrt(25) -> 5  
cbrt | cbrt(numeric_type) -> float | Returns the cubed root of a numeric type. | cbrt(125) -> 5

